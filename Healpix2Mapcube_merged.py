
import matplotlib
matplotlib.use('Agg')
import h5py, healpy, pyfits
import numpy as np
import sys
import matplotlib.pyplot as plt
import sys
import subprocess 
import os

def Healpix2Cartesian(basedir, fname):                        
    # Read from hdf5 file
    f = h5py.File(fname,'r')
    
    for t in f['templates/']:
        print "Writing", t
        if t in ["energies",'pi0_0','brem_0','ics_opt']: 
            continue
        print "Writing", t
        
        # Get the cartesian maps for each energy
        hpixcube = f['templates/'+t][()]
        cartcube = np.zeros((hpixcube.shape[0], 721,1440), dtype=np.float32)
        for i in range(hpixcube.shape[0]):
            cartcube[i] = healpy.cartview(hpixcube[i], hold=True, return_projected_map=True,
                                                  xsize=1440, lonra=[-179.875, 179.875],flip='geo')
            plt.gcf()
        
        # Generate new hdu object
        hdu_new = pyfits.PrimaryHDU(cartcube.astype(np.float32))
        
        # Copy galdef into header
        galdef = dict(f['/galdef'].attrs.items())
        hdu_new.header.add_comment("Diffuse model generated by Eric Carlson (erccarls@ucsc.edu)")
        for key, val in galdef.items():
            hdu_new.header.add_comment(key + "=" +val)
        
        hdu_new.header['CRVAL1'] = 0.0
        hdu_new.header['CRPIX1'] = 720
        hdu_new.header['CDELT1'] = 0.25
        hdu_new.header['CUNIT1']= 'deg'
        hdu_new.header['CTYPE1']= 'GLON-CAR'
        hdu_new.header['CRVAL2'] = 0
        hdu_new.header['CRPIX2'] = 361
        hdu_new.header['CDELT2'] = 0.25
        hdu_new.header['CUNIT2']= 'deg'
        hdu_new.header['CTYPE2']= 'GLAT-CAR'
        hdu_new.header['CRVAL3'] = float(galdef['E_gamma_min'])
        hdu_new.header['CRPIX3'] = 0
        hdu_new.header['CDELT3'] = np.log10(float(galdef['E_gamma_factor']))
        hdu_new.header['CTYPE3']= 'Energy'
        hdu_new.header['CUNIT3']= 'MeV'
        hdu_new.header['EXTEND']=True
        hdu_new.header['CREATOR'] = ('Eric Carlson (erccarls@ucsc.edu)', '')

        # Write energy extension table
        energies = np.array([float(galdef['E_gamma_min'])*float(galdef['E_gamma_factor'])**i for i in range(cartcube.shape[0])])
        tbhdu = pyfits.BinTableHDU.from_columns([
                pyfits.Column(name='Energy', format='D', array=energies),])
        tbhdu.header['EXTNAME']="ENERGIES"
        
        hdulist = pyfits.HDUList([hdu_new,tbhdu])
        
        # Write to file
        if t=='ics_fir':
            fname_out = fname.split('.')[0]+"_ics_opt_fir_mapcube.fits"
        else: 
            fname_out = fname.split('.')[0]+"_"+t+"_mapcube.fits"
        hdulist.writeto(basedir+'/'+fname_out,clobber=True)

        # For some reason on my platform, pyfits gzip compression was writing corrupt files.
        p = subprocess.Popen(['gzip -f ' + basedir+'/'+fname_out ,], shell=True)






def Healpix2CartesianMerge(basedir, fname):                        
    # Read from hdf5 file
    f = h5py.File(fname,'r')
    

    output = { 'pi0_brem':['pi0','brem'],
               'ics_all':['ics_cmb','ics_opt','ics_fir'] }



    for k, v in output.items():
        print "Writing", k, v
        
        

        # Get the cartesian maps for each energy
        hpixcube=None
        for t in v:
            print 'Adding template:', t 
            if hpixcube is None:
                hpixcube = f['templates/'+t][()]
            else: 
                hpixcube += f['templates/'+t][()]
        
        cartcube = np.zeros((hpixcube.shape[0], 721,1440), dtype=np.float32)
        for i in range(hpixcube.shape[0]):
            cartcube[i] = healpy.cartview(hpixcube[i], hold=True, return_projected_map=True,
                                                  xsize=1440, lonra=[-179.875, 179.875],flip='geo')
            plt.gcf()
        
        # Generate new hdu object
        hdu_new = pyfits.PrimaryHDU(cartcube.astype(np.float32))
        
        # Copy galdef into header
        galdef = dict(f['/galdef'].attrs.items())
        hdu_new.header.add_comment("Diffuse model generated by Eric Carlson (erccarls@ucsc.edu)")
        for key, val in galdef.items():
            hdu_new.header.add_comment(key + "=" +val)
        
        hdu_new.header['CRVAL1'] = 0.0
        hdu_new.header['CRPIX1'] = 720
        hdu_new.header['CDELT1'] = 0.25
        hdu_new.header['CUNIT1']= 'deg'
        hdu_new.header['CTYPE1']= 'GLON-CAR'
        hdu_new.header['CRVAL2'] = 0
        hdu_new.header['CRPIX2'] = 361
        hdu_new.header['CDELT2'] = 0.25
        hdu_new.header['CUNIT2']= 'deg'
        hdu_new.header['CTYPE2']= 'GLAT-CAR'
        hdu_new.header['CRVAL3'] = float(galdef['E_gamma_min'])
        hdu_new.header['CRPIX3'] = 0
        hdu_new.header['CDELT3'] = np.log10(float(galdef['E_gamma_factor']))
        hdu_new.header['CTYPE3']= 'Energy'
        hdu_new.header['CUNIT3']= 'MeV'
        hdu_new.header['EXTEND']=True
        hdu_new.header['CREATOR'] = ('Eric Carlson (erccarls@ucsc.edu)', '')

        # Write energy extension table
        energies = np.array([float(galdef['E_gamma_min'])*float(galdef['E_gamma_factor'])**i for i in range(cartcube.shape[0])])
        tbhdu = pyfits.BinTableHDU.from_columns([
                pyfits.Column(name='Energy', format='D', array=energies),])
        tbhdu.header['EXTNAME']="ENERGIES"
        
        hdulist = pyfits.HDUList([hdu_new,tbhdu])
    
        fname_out = fname.split('.')[0]+"_"+k+"_mapcube.fits"
        hdulist.writeto(basedir+'/'+fname_out,clobber=True)

        # For some reason on my platform, pyfits gzip compression was writing corrupt files.
        p = subprocess.Popen(['gzip -f ' + basedir+'/' +fname_out ,], shell=True)

        print 'File written to ', fname_out
    

from copy import deepcopy
def Healpix2CartesianMerge_SepRings(basedir, fname):                        
    # Read from hdf5 file
    f = h5py.File(fname,'r')

    output = { 'pi0_brem_split':['pi0','brem'],
               'ics_all_split':['ics_cmb','ics_opt','ics_fir'], 
               'pi0_brem_0_split':['pi0_0','brem_0'],
               'pi0_brem_1_split':['pi0_1','brem_1']}



    for k, v in output.items():
        print "Writing", k, v
        
        # Get the cartesian maps for each energy
        hpixcube=None
        for t in v:
            print 'Adding template:', t 
            if hpixcube is None:
                hpixcube = f['templates/'+t][()]
            else: 
                hpixcube += f['templates/'+t][()]

        # Subtract off inner rings.
        if k == 'pi0_brem_split':
            hpixcube -= f['templates/pi0_0'][()] * f['/fit_results/global'].attrs['global_XCO'][0]
            hpixcube -= f['templates/brem_0'][()] * f['/fit_results/global'].attrs['global_XCO'][0]
            hpixcube -= f['templates/pi0_1'][()] * f['/fit_results/global'].attrs['global_XCO'][1]
            hpixcube -= f['templates/brem_1'][()] * f['/fit_results/global'].attrs['global_XCO'][1]
        
        cartcube = np.zeros((hpixcube.shape[0], 721,1440), dtype=np.float32)
        for i in range(hpixcube.shape[0]):
            cartcube[i] = healpy.cartview(hpixcube[i], hold=True, return_projected_map=True,
                                                  xsize=1440, lonra=[-179.875, 179.875],flip='geo')
            plt.gcf()
        

        if k in ['pi0_brem_split', 'ics_all_split']:
            splits = ['plane', 'offplane']
        
        elif k in ['pi0_brem_0_split', 'pi0_brem_1_split']:
            splits = ['allregions']
        

        # Write HDU object for above and below plane
        for split_key in splits:
            # Generate new hdu object
            c_cube = cartcube.astype(np.float32)

            # mask regions
            if split_key == 'plane':
                c_cube[:,:353,:] = 0
                c_cube[:,369:,:] = 0
            elif split_key == 'offplane':
                c_cube[:,353:369,:] = 0

            hdu_new = pyfits.PrimaryHDU( c_cube )
            
            # Copy galdef into header
            galdef = dict(f['/galdef'].attrs.items())
            hdu_new.header.add_comment("Diffuse model generated by Eric Carlson (erccarls@ucsc.edu)")
            for key, val in galdef.items():
                hdu_new.header.add_comment(key + "=" +val)
            
            hdu_new.header['CRVAL1'] = 0.0
            hdu_new.header['CRPIX1'] = 720
            hdu_new.header['CDELT1'] = 0.25
            hdu_new.header['CUNIT1']= 'deg'
            hdu_new.header['CTYPE1']= 'GLON-CAR'
            hdu_new.header['CRVAL2'] = 0
            hdu_new.header['CRPIX2'] = 361
            hdu_new.header['CDELT2'] = 0.25
            hdu_new.header['CUNIT2']= 'deg'
            hdu_new.header['CTYPE2']= 'GLAT-CAR'
            hdu_new.header['CRVAL3'] = float(galdef['E_gamma_min'])
            hdu_new.header['CRPIX3'] = 0
            hdu_new.header['CDELT3'] = np.log10(float(galdef['E_gamma_factor']))
            hdu_new.header['CTYPE3']= 'Energy'
            hdu_new.header['CUNIT3']= 'MeV'
            hdu_new.header['EXTEND']=True
            hdu_new.header['CREATOR'] = ('Eric Carlson (erccarls@ucsc.edu)', '')

            # Write energy extension table
            energies = np.array([float(galdef['E_gamma_min'])*float(galdef['E_gamma_factor'])**i for i in range(cartcube.shape[0])])
            tbhdu = pyfits.BinTableHDU.from_columns([
                    pyfits.Column(name='Energy', format='D', array=energies),])
            tbhdu.header['EXTNAME']="ENERGIES"
            
            hdulist = pyfits.HDUList([hdu_new,tbhdu])
        
            fname_out = fname.split('.')[0]+"_"+k+'_'+split_key+"_mapcube.fits"
            hdulist.writeto(basedir+'/'+fname_out,clobber=True)

            # For some reason on my platform, pyfits gzip compression was writing corrupt files.
            p = subprocess.Popen(['gzip -f ' + basedir+'/' +fname_out ,], shell=True)

            print 'File written to ', fname_out
        

if __name__ == "__main__": 
    fname = sys.argv[1]
    print sys.argv
    if len(sys.argv) >= 3 and int(sys.argv[2])==1:
        Healpix2CartesianMerge('/adata/eric/', fname)
    elif len(sys.argv) >= 3 and int(sys.argv[2])==2:
        Healpix2CartesianMerge_SepRings('/adata/eric/', fname)
    else: 
        Healpix2Cartesian('/adata/eric/', fname)





